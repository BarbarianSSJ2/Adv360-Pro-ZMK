/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        TAP_ACCENT_A: TAP_ACCENT_A {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_ACCENT_A";
            #binding-cells = <0>;
            bindings = <&kp A>, <&AGRAVE>;
        };

        TAP_ACCENT_E: TAP_ACCENT_E {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_ACCENT_E";
            #binding-cells = <0>;
            bindings = <&kp E>, <&EGRAVE>;
        };

        TAP_ACCENT_U: TAP_ACCENT_U {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_ACCENT_U";
            #binding-cells = <0>;
            bindings = <&kp U>, <&UGRAVE>, <&UDIERESIS>;
        };

        TAP_ACCENT_I: TAP_ACCENT_I {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_ACCENT_I";
            #binding-cells = <0>;
            bindings = <&kp I>, <&IGRAVE>;
        };

        TAP_ACCENT_O: TAP_ACCENT_O {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_ACCENT_O";
            #binding-cells = <0>;
            bindings = <&kp O>, <&OGRAVE>;
        };
    };

    macros {
        AGRAVE: AGRAVE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp A>;
            label = "AGRAVE";
        };

        EGRAVE: EGRAVE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp E>;
            label = "EGRAVE";
        };

        UGRAVE: UGRAVE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp U>;
            label = "UGRAVE";
        };

        IGRAVE: IGRAVE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp I>;
            label = "IGRAVE";
        };

        OGRAVE: OGRAVE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp O>;
            label = "OGRAVE";
        };

        MACRO_PARENTESIS: MACRO_PARENTESIS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N8) &kp LS(N9) &kp LEFT_ARROW>;
            label = "MACRO_PARENTESIS";
        };

        MACRO_CORCHETES: MACRO_CORCHETES {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_BRACE) &kp LS(RIGHT_BRACKET) &kp LEFT_ARROW>;
            label = "MACRO_CORCHETES";
        };

        GRACIAS: GRACIAS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp R &kp A &kp C &kp I &kp A &kp S &kp EXCL>;
            label = "GRACIAS";
        };

        UDIERESIS: UDIERESIS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_BRACKET) &kp U>;
            label = "UDIERESIS";
        };

        OBRIGADO: OBRIGADO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(O) &kp B &kp R &kp I &kp G &kp A &kp D &kp O &kp EXCL>;
            label = "OBRIGADO";
        };

        macro_ACCENT_TEST_a: ACCENT_TEST_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt RIGHT_ALT &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_0 &kp RIGHT_ALT>;
            label = "ACCENT_TEST_A";
        };
    };

    combos {
        compatible = "zmk,combos";

        LANG_SWITCH {
            bindings = <&kp LG(SPACE)>;
            key-positions = <70 75 60 65>;
            layers = <0 4>;
        };

        SOFT_OFF {
            bindings = <&GRACIAS>;
            key-positions = <0 13 65 70>;
        };

        OBRIGADO {
            bindings = <&OBRIGADO>;
            key-positions = <14 27 65 70>;
        };

        CAPSCOMBO {
            bindings = <&kp LC(C)>;
            key-positions = <46 65>;
        };

        CAPSCOMBO2 {
            bindings = <&kp LC(V)>;
            key-positions = <70 59>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL       &kp N1         &kp N2    &kp N3         &kp N4     &kp N5  &tog 1                                                    &mo 3              &kp N6  &kp N7         &kp N8         &kp N9         &kp N0    &kp MINUS
&kp TAB         &kp Q          &kp W     &TAP_ACCENT_E  &kp R      &kp T   &kp RA(Q)                                                 &MACRO_PARENTESIS  &kp Y   &TAP_ACCENT_U  &TAP_ACCENT_I  &TAP_ACCENT_O  &kp P     &kp BSLH
&kp ESC         &TAP_ACCENT_A  &kp S     &kp D          &kp F      &kp G   &sl 4      &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &sl 4              &kp H   &kp J          &kp K          &kp L          &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z          &kp X     &kp C          &kp V      &kp B                         &kp HOME      &kp PG_UP                                &kp N   &kp M          &kp COMMA      &kp DOT        &kp FSLH  &kp RIGHT_SHIFT
&mo 2           &kp GRAVE      &kp CAPS  &kp LEFT       &kp RIGHT          &kp BSPC   &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE                  &kp UP         &kp DOWN       &kp LBKT       &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5               &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp KP_PLUS          &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp KP_SUBTRACT      &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp LS(KP_MULTIPLY)                       &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                       &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1         &kp F2     &kp F3     &kp F4     &kp F5     &kp F6     &tog 1                                           &mo 3   &kp F7  &kp F8  &kp F9     &kp F10  &kp F11           &kp F12
&trans         &trans     &trans     &kp UP     &trans     &trans     &kp LA(TAB)                                      &none   &trans  &trans  &kp LC(I)  &trans   &kp C_PLAY_PAUSE  &kp C_VOLUME_UP
&trans         &trans     &kp LEFT   &kp DOWN   &kp RIGHT  &trans     &trans       &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans     &trans   &trans            &kp C_VOL_DN
&kp LC(LS(Z))  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)                       &trans      &trans                  &trans  &trans  &trans     &trans   &trans            &kp K_MUTE
&trans         &trans     &trans     &trans     &trans                &trans       &trans  &trans      &trans  &trans  &trans          &trans  &trans     &trans   &trans            &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        LAYER_ACCENTS {
            bindings = <
&trans  &trans                  &trans          &trans            &trans             &trans  &trans                                      &trans            &trans  &trans      &trans   &trans   &trans  &trans
&trans  &macro_ACCENT_TEST_a    &trans          &EGRAVE           &trans             &trans  &trans                                      &MACRO_CORCHETES  &trans  &UDIERESIS  &IGRAVE  &OGRAVE  &trans  &trans
&trans  &AGRAVE                 &trans          &trans            &trans             &trans  &trans  &trans  &trans      &trans  &trans  &trans            &trans  &trans      &trans   &trans   &trans  &trans
&trans  &trans                  &trans          &trans            &trans             &trans                  &trans      &trans                            &trans  &trans      &trans   &trans   &trans  &trans
&trans  &kp LG(LA(LEFT_ARROW))  &kp LG(LA(UP))  &kp LG(LA(DOWN))  &kp LG(LA(RIGHT))          &trans  &trans  &trans      &trans  &trans  &trans                    &trans      &trans   &trans   &trans  &trans
            >;
        };
    };
};
